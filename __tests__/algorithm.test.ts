import {
  hash,
  dec2hex,
  separateBlockByWords,
  padMessage,
} from '../src/algorithm';

describe('algorithm', () => {
  it('should hash the input', () => {
    const input = 'honda';
    const expected =
      'c5493409580caa9130c4a1e291e98c5514d75d92fa24a22cea60540eda964976278fe901313f4fcdba97523da40455c4282e31b8b4b0268e8436be7dcbf1021d';

    expect(hash(input)).toBe(expected);
  });

  describe('dec2hex', () => {
    it('should return input in hex', () => {
      expect(dec2hex('10')).toBe('a');
    });
  });

  describe('separateBlockByWords', () => {
    it('should separate block by words', () => {
      expect(
        separateBlockByWords(

        ),
      ).toStrictEqual([
        '0110100001101111011011100110010001100001100000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000000000',
        '0000000000000000000000000000000000000000000000000000000000101000',
      ]);
    });
  });

  describe('padMessage', () => {
    it('should pad the message', () => {
      expect(
        padMessage('0110100001101111011011100110010001100001'),
      ).toStrictEqual(

      );
    });
  });
});
